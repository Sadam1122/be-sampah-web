generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum Role {
  SUPERADMIN
  ADMIN
  STAFF
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  username  String   @unique
  password  String
  role      Role     @default(WARGA)
  desaId    String?
  desa      Desa?    @relation(fields: [desaId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}


model Session {
  id          String    @id @default(uuid())
  token       String    @unique
  expires     DateTime
  user        User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId      String
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  @@index([userId])
}

model ActivityLog {
  id          String    @id @default(uuid())
  action      String
  details     String?   @db.Text
  ipAddress   String?
  userAgent   String?   @db.Text
  user        User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId      String
  createdAt   DateTime  @default(now())

  @@index([userId])
  @@index([createdAt])
}


model PengumpulanSampah {
  id           String   @id @default(uuid())
  berat        Decimal  @db.Decimal(5, 2)
  namaPemilik  String   @map("nama_pemilik") @db.VarChar(100)
  rt           String   @db.VarChar(3)
  rw           String   @db.VarChar(3)
  desa         String   @db.VarChar(100)
  jenisSampah  String   @map("jenis_sampah") @db.VarChar(50)
  poin         Int
  waktu        DateTime @default(now()) @db.Timestamp

  @@index([waktu])
  @@index([namaPemilik])
  @@index([jenisSampah])
  @@map("pengumpulan_sampah")
}

model Pengguna {
  id        String   @id @default(uuid())
  nama      String   @db.VarChar(100)
  email     String   @unique @db.VarChar(100)
  password  String   @db.VarChar(100)
  createdAt DateTime @default(now()) @map("created_at") @db.Timestamp

  @@map("pengguna")
}

model Desa {
  id                String              @id @default(uuid())
  nama              String              @db.VarChar(100)
  kecamatan         String              @db.VarChar(100)
  kabupaten         String              @db.VarChar(100)
  provinsi          String              @db.VarChar(100)
  jadwalPengumpulan JadwalPengumpulan[]

  @@map("desa")
}

model JadwalPengumpulan {
  id               String   @id @default(uuid())
  desaId           String   @map("desa_id")
  hariPengumpulan  String   @map("hari_pengumpulan") @db.VarChar(20)
  waktuMulai       DateTime @map("waktu_mulai") @db.Time()
  waktuSelesai     DateTime @map("waktu_selesai") @db.Time()
  desa             Desa     @relation(fields: [desaId], references: [id])

  @@map("jadwal_pengumpulan")
}

// Views, functions, and triggers are not directly supported in Prisma
// You may need to create these manually in your database or use raw SQL queries

model TotalPoinPengguna {
  namaPemilik String @map("nama_pemilik")
  totalPoin   Int    @map("total_poin")

  @@id([namaPemilik])
  @@map("total_poin_pengguna")
}

model Leaderboard {
  namaPemilik       String @map("nama_pemilik")
  totalPoin         Int    @map("total_poin")
  jumlahPengumpulan Int    @map("jumlah_pengumpulan")

  @@id([namaPemilik])
  @@map("leaderboard")
}