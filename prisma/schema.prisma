generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum Role {
  SUPERADMIN
  ADMIN
  STAFF
}

model User {
  id            String      @id @default(uuid())
  email         String      @unique
  username      String      @unique
  password      String
  role          Role        @default(STAFF)
  verified      Boolean     @default(false)
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt
  createdBy     User?       @relation("UserCreation", fields: [createdById], references: [id])
  createdById   String?
  createdUsers  User[]      @relation("UserCreation")
  sessions      Session[]
  verifyToken   VerifyToken?
  activityLogs  ActivityLog[]
}

model Session {
  id          String    @id @default(uuid())
  token       String    @unique
  expires     DateTime
  user        User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId      String
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  @@index([userId])
}

model VerifyToken {
  id          String    @id @default(uuid())
  token       String    @unique
  expires     DateTime
  user        User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId      String    @unique
  createdAt   DateTime  @default(now())

  @@index([token])
}

model ActivityLog {
  id          String    @id @default(uuid())
  action      String
  details     String?   @db.Text
  ipAddress   String?
  userAgent   String?   @db.Text
  user        User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId      String
  createdAt   DateTime  @default(now())

  @@index([userId])
  @@index([createdAt])
}

